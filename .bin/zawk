#!/bin/zsh

# 传入的参数
# 读文件前执行的语句
local begin_cmd
# 读文件后执行的语句
local end_cmd
# 每行执行的语句
local cmd

# 供外部使用的变量
# 当前行内容，不含换行符
local l
# 当前行按照分隔符切分成的数组
local f
# 当前行号
local nr=1
# 当前行的列数
local nf

while {getopts F:f:B:b:E:e: arg} {
    case $arg {
        (F|f)
        IFS_BAK=$IFS
        IFS=$OPTARG
        ;;

        (B|b)
        begin_cmd=$OPTARG
        ;;

        (E|e)
        end_cmd=$OPTARG
        ;;
    }
}

cmd=$*[-1]


eval $begin_cmd

# 不带 { 的，自动加 {print $l}
# / / 和 !/ / 的，转变成 [[ =~ ]] 
# 不支持 / /,/ /
# 其他的判断，如果有 " 加 [[ ]] &&
# 其他的判断，如果有 > <，加 (( )) &&

if [[ $cmd == /*/ ]] {
    cmd="if [[ \$l =~ \".*$cmd[2,-2].*\" ]]"
} elif [[ $cmd == !/*/ ]] {
    cmd="if ! [[ \$l =~ \".*$cmd[3,-2].*\" ]]"
}

[[ $cmd != *{*} ]] && cmd+=" {echo \$l}"

#echo $cmd

while {read l} {
    f=(${=l})
    nf=$#f

    eval $cmd

    ((++nr))
}

eval $end_cmd

[[ -n $IFS_BAK ]] && IFS=$IFS_BAK
