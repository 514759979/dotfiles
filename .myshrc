#!/bin/bash

[ -n "$LANG" ] || export LANG="en_US.UTF-8"

if [ -e /cygdrive ]; then
    export PATH="$PATH:$HOME/.bin"
    alias psc='powershell -c'
    alias z='powershell'
    alias ifconfig='ipconfig'
    alias ping='/cygdrive/c/Windows/system32/ping'

    mklink() {
        if [ "$1" = "-s" ]; then
            src="${2/\//\\}"
            dst="${3/\//\\}"
            cmd /c mklink /j "$dst" "$src" 2>&1 | iconv -f gbk -t utf-8
        else
            src="$1"
            dst="$2"
            cmd /c mklink /h "$dst" "$src" 2>&1 | iconv -f gbk -t utf-8
        fi
    }

    sudo() {
        cygstart --action=runas "$@"
    }

    get-service() {
        powershell "get-service $@"
    }

    get-process() {
        powershell "get-process $@"
    }
fi

export EDITOR=vim
export BROWSER=firefox
export PAGER='less -isrf'
export GREP_COLOR='40;33;01'
eval `dircolors $HOME/.dir_colors`

# man color
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

st() {
    ($@ &>/dev/null &)
}

imgresize() {
    gm mogrify -resize $1x$2 $3
}

cry() {
    if [ "t$1" = "t-d" ]; then
        openssl enc -aes-256-cbc -d -in $2 -out $3
    else
        openssl enc -aes-256-cbc -e -in $1 -out $2
    fi
}

c() {
    cd $1
    ls -F --color
}

zcd() {
    cd ~/.avfs$PWD/$@#
}

zback() {
    cd $(pwd|sed -e 's|^.*\.avfs||g' -e 's|/[^/]*#$||g')
}


# atool begin
file_7z='\.rar\b|\.deb\b|\.iso\b'

al() {
    if echo $* |grep -Pi $file_7z >/dev/null; then
        als $* -F 7z
    else
        als $*
    fi
}

a() {
    if echo $* |grep -Pi $file_7z >/dev/null; then
        apack $* -F 7z
    else
        apack $*
    fi
}

au() {
    if echo $* |grep -Pi $file_7z >/dev/null; then
        arepack $* -F 7z
    else
        arepack $*
    fi
}

x() {
    if echo $* |grep -Pi $file_7z >/dev/null; then
        aunpack $* -F 7z
    else
        aunpack $*
    fi
}

# atool end

mcat() {
    markdown2 $1 -f /tmp/.html
    w3m /tmp/.html
    rm /tmp/.html
}

findx() {
    find -print0 | xargs -0 $@
}

calc() {
    zmodload zsh/mathfunc 2>/dev/null
    echo $[$*]
}

gr() {
    grep --color "$*" -r .
}

b() {
    if [ $# = 0 ]; then
        cd ..
    else
        go_dir='.'
        for i in {1..$1}; do
            go_dir=$go_dir/..
        done
        cd $go_dir
    fi

    ls -F --color
}

opsqlite_chromium() {
    cd ~/.config/chromium
    find -print0|xargs -0 file|grep SQLite|sed 's/:.*$//g' > .opsqlite
    while read i; do
        sqlite3 $i vacuum
    done < .opsqlite
    rm .opsqlite
    cd -
}

opsqlite_firefox() {
    cd ~/.mozilla/firefox/
    for i in `find -name '*.sqlite'`; do
        sqlite3 $i vacuum
    done
    cd -
}

cwi() {
    cat `which $1`
}

vwi() {
    vim `which $1`
}

mm() {
    echo "$2" | mail -s "$1" $3 $4 ly50247@126.com
}

ba() {
    o "http://www.baidu.com/s?wd=$*"
}

ac() {
    if [ $# = 1 ]; then
        awk '{print $'$1'}' $2
    elif [ $# = 2 ]; then
        awk -F$2 '{print $'$1'}' $3
    elif [ $# = 0 ]; then
        awk '{print $1}' $1
    fi
}

fordo() {
    cmd=$1
    shift
    for i in $*; do
        eval $cmd $i
    done
}

n2dec() {
    echo $[$2#$1]
}

dec2n() {
    echo "obase=$2;$1" | bc
}

0x() {
    n2dec $1 16
}

0b() {
    n2dec $1 2
}

0o() {
    n2dec $1 8
}

p16() {
    dec2n $1 16
}

p8() {
    dec2n $1 8
}

p2() {
    dec2n $1 2 
}

pbg() {
    wget http://mirrors.ustc.edu.cn/gentoo/distfiles/$1
}

lsfd() {
  [ "$#" -eq 1 ] || return 0
  ps aux | grep "$1"
  for i in $(pgrep "$1"); do
    echo "\n$i":
    ls -l --color /proc/"$i"/fd
  done
}

lsproc() {
  [ "$#" -eq 1 ] || return 0
  ps aux | grep "$1"
  for i in $(pgrep "$1"); do
    echo "\n$i":
    ls -l --color /proc/"$i"
  done
}

if which apt-cyg &>/dev/null; then
    alias p='apt-cyg -u find'
    alias pi='apt-cyg -u install'
    alias pp='apt-cyg -u remove'
    alias pud='cygwin -gdNq'
    alias pq='apt-cyg show'
    alias pqi='apt-cyg describe'
    alias psi='apt-cyg describe'
    #alias pqo='apt-cyg packageof'
    alias pqo='cygcheck -f'
    alias pql='cygcheck -l'
elif which yaourt &>/dev/null; then
    alias p='yaourt'
    alias pi='p -S'
    alias pia='p -S --noconfirm'
    alias pli='p -U'
    alias pud='p -Syu --aur'
    alias psu='p -Su --aur'
    alias pd='p -Sw'
    alias pp='p -Rcsn'
    alias psi='p -Si'
    alias pq='p -Q'
    alias pqi='p -Qi'
    alias pqe='pacman -Qeq | sort'
    alias psl='pkgfile -l'
    alias pql='p -Ql'
    alias pso='pkgfile -v'
    alias pqo='p -Qo'
    alias pqd='p -Qdt'
    alias pqm='p -Qqm'
    alias prd='p -Rdd'
    alias pae='p -D --asexplicit'
    alias pad='p -D --asdeps'
    alias pcl='echo y"\n"y | p -Scc'
    alias pbs='p -G'

    y() {
        pacman -Ss $*
        cat ~/.myconf/aurlist | grep -Pi --color=none "$*" | awk -F'  ' '{
            a=" "$3" ["$1"] ("$4") {"$6"}"
            print "\033[35;1maur/\033[36;1m" $2 "\033[32;1m" a "\033[0m"
            print "    "$5
        }'
    }

    pqii() {
        cat /var/lib/pacman/local/$1-*/install
    }

elif which brew &>/dev/null; then
    alias p='brew search'
    alias pi='brew install'
    alias pp='brew uninstall'
    alias psi='brew info'
    alias pq='brew list'
    alias pql='brew list'
    alias pud='brew update'
    alias psu='brew upgrade'
elif which apt-get &>/dev/null; then
    alias p='apt-cache search'
    alias pi='apt-get install'
    alias pp='apt-get purge'
    alias pud='apt-get update;apt-get upgrade'
    alias pqd='apt-get autoremove'
    alias psu='apt-get upgrade'
    alias pcl='apt-get clean'
    alias pql='dpkg -l'
elif which emerge &>/dev/null; then
    alias p='eix'
    alias pi='sudo emerge -uDN'
    alias psu='sudo emerge -uDN world'
    alias pp='sudo emerge -c'
    alias prd='sudo emerge -C'
    alias pud='sudo emerge --sync'
    alias pd='sudo emerge -f'
    alias pql='equery f'
    alias pqo='equery b'
    alias pq='equery l'
    alias psi='emerge -pv'
    alias pli='sudo emerge -k'
elif which jumbo &>/dev/null; then
    alias p='jumbo search'
    alias pi='jumbo install'
    alias pp='jumbo remove'
    alias pql='jumbo list-files'
    alias pli='jumbo local-install'
    alias pud='jumbo update'
    alias pqd='jumbo check-unused'
fi

alias h='history'
alias l='ls -F --color'
alias lsd='l -d *(-/DN)'
alias ll='l -l --time-style=long-iso'
alias la='l -A'
alias lla='ll -A'
alias llh='ll -h'
alias g='grep'
alias rd='rmdir'
alias md='mkdir'
alias v='vim'
alias sv='sudo vim'
alias py='python2'
alias info='info --vi-keys'
alias s='sudo'
alias hd='hexdump -C'
alias le="$PAGER"
alias sm='sudo mount'
alias u='sudo umount'
alias dh='df -hT'
alias pyweb='python_upload 8888'
alias ucat='iconv -f gb18030 -t utf-8 -c'
alias gcat='iconv -f utf-8 -t gb18030 -c'
alias u16cat='iconv -f utf-16 -t utf-8 -c'
alias dub='du -sbh'
alias dud='du --max-depth 1 -bh '
alias psg='ps aux|grep -v grep|grep'
alias psa='ps aux'
alias pst='pstree'
alias mt='top -u osily'
alias ctime='time cat'
alias lg='luit -encoding gb18030'
alias wi='which'
alias rpd='rm -r $PWD;cd ..'
alias rpdf='rm -rf $PWD;cd ..'
alias cpui='cat /proc/cpuinfo | grep MHz'
alias cl='cat >/dev/clipboard'
alias find0='find -print0'
alias xargs0='xargs -0'
alias findg='find | grep -P'
alias se='sudo systemctl'
alias ehttp='export http_proxy=http://127.0.0.1:8087'
alias ehttps='export https_proxy=http://127.0.0.1:8087'
alias eh='ehttp;ehttps'
alias e='echo'
alias f='file'
alias t='cat'
alias i='git'
alias ic='ifconfig'
alias m='man'
alias q='exit'
alias vd='vimdiff'
alias wl='wc -l'
alias di='colordiff'
alias frm='free -m'
alias fm='ranger'
alias d='tree'
alias gmc='gm convert'
alias mtu='sudo ifconfig wlan0 mtu 1480'
alias jl='ll /dev/sd*; ll /dev/mmc*'
alias tf='tailf'
alias pb='cat ~/.myconf/source_list | grep'
alias hi='hostname -i'
alias czip="export UNZIP='-O CP936'"
